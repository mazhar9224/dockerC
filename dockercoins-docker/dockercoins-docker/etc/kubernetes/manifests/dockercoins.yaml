################################################################################
#      Copyright (C) 2020        Sebastian Francisco Colomar Bauza             #
#      SPDX-License-Identifier:  GPL-2.0-only                                  #
################################################################################
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: rng
spec:
  selector:
    matchLabels:
      app: rng
  template:
    metadata:
      labels:
        app: rng
    spec:
      containers:
      - name: rng
        image: academiaonline/dockercoins:latest-rng
        imagePullPolicy: Always
        livenessProbe:
          tcpSocket:
            port: 8080
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 100m
            memory: 100M
          requests:
            cpu: 100m
            memory: 100M
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hasher
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hasher
  template:
    metadata:
      labels:
        app: hasher
    spec:
      containers:
      - name: hasher
        image: academiaonline/dockercoins:latest-hasher
        imagePullPolicy: Always
        livenessProbe:
          tcpSocket:
            port: 8080
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 100m
            memory: 100M
          requests:
            cpu: 100m
            memory: 100M
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:6.0.9-alpine3.12@sha256:aa31e6d2afc72d2222ed3953587197c324f615861771637a64053f9d99ba4b74
        livenessProbe:
          tcpSocket:
            port: 6379
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        ports:
        - containerPort: 6379
        readinessProbe:
          exec:
            command:
            - redis-cli
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 100m
            memory: 100M
          requests:
            cpu: 100m
            memory: 100M
        volumeMounts:
        - name: redis
          mountPath: /data
      volumes:
      - name: redis
        persistentVolumeClaim:
          claimName: redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webui
  template:
    metadata:
      labels:
        app: webui
    spec:
      containers:
      - name: webui
        image: academiaonline/dockercoins:latest-webui
        imagePullPolicy: Always
        livenessProbe:
          tcpSocket:
            port: 8080
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 100m
            memory: 100M
          requests:
            cpu: 100m
            memory: 100M        
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: worker
  template:
    metadata:
      labels:
        app: worker
    spec:
      containers:
      - name: worker
        image: academiaonline/dockercoins:latest-worker
        imagePullPolicy: Always
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - netstat -tn | grep ESTABLISHED | grep -q 8080
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - netstat -tn | grep ESTABLISHED | grep -q 6379
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 100m
            memory: 100M
          requests:
            cpu: 100m
            memory: 100M
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: hasher
spec:
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: worker
    ports:
    - port: 8080
  podSelector:
    matchLabels:
      app: hasher
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: redis
spec:
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: webui
    - podSelector:
        matchLabels:
          app: worker
    ports:
    - port: 6379
  podSelector:
    matchLabels:
      app: redis
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: rng
spec:
  podSelector:
    matchLabels:
      app: rng
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: worker
    ports:
    - port: 8080
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: webui
spec:
  podSelector:
    matchLabels:
      app: webui
  ingress:
  - ports:
    - port: 8080
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: worker
spec:
  podSelector:
    matchLabels:
      app: worker
  policyTypes:
  - Ingress
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: redis
spec:
  capacity:
    storage: 1Gi
  accessModes:
  - ReadWriteOnce
  hostPath:
    path: /tmp/redis
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: hasher
spec:
  ports:
  - port: 8080
  selector:
    app: hasher
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  ports:
  - port: 6379
  selector:
    app: redis
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: rng
spec:
  ports:
  - port: 8080
  selector:
    app: rng
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: webui
spec:
  ports:
  - port: 8080
  selector:
    app: webui
  type: ClusterIP
---
